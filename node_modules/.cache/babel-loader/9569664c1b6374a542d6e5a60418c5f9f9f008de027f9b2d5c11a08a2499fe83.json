{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect, useRef } from \"react\";\nimport { ExpenseTrackerContext } from \"./context/context\";\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\nconst useTransactions = title => {\n  _s();\n  resetCategories();\n  const {\n    transactions\n  } = useContext(ExpenseTrackerContext);\n  const transactionsType = transactions.filter(t => t.type === title);\n  const total = transactionsType.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n\n  // Use useRef to keep track of the chart instance\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Check if there's an existing chart\n    if (chartRef.current && chartRef.current.chartInstance) {\n      // Destroy the existing chart\n      chartRef.current.chartInstance.destroy();\n    }\n\n    // Render the new chart\n    const newChartInstance = new Doughnut(chartRef.current, {\n      data: chartData\n    });\n\n    // Update the chartRef with the new instance\n    chartRef.current = newChartInstance;\n\n    // Cleanup the chart on component unmount\n    return () => {\n      if (chartRef.current && chartRef.current.chartInstance) {\n        chartRef.current.chartInstance.destroy();\n      }\n    };\n  }, [title, transactions]);\n  transactionsType.forEach(t => {\n    const category = categories.find(c => c.type === t.category);\n    if (category) category.amount += t.amount;\n  });\n  const filteredCategories = categories.filter(sc => sc.amount > 0);\n  const chartData = {\n    labels: filteredCategories.map(c => c.type),\n    datasets: [{\n      data: filteredCategories.map(c => c.amount),\n      backgroundColor: filteredCategories.map(c => c.color)\n    }]\n  };\n  return {\n    filteredCategories,\n    total,\n    chartData\n  };\n};\n_s(useTransactions, \"VuNB1LQJF4GncANWH/5e8KpT6Ok=\");\nexport default useTransactions;","map":{"version":3,"names":["useContext","useEffect","useRef","ExpenseTrackerContext","incomeCategories","expenseCategories","resetCategories","useTransactions","title","_s","transactions","transactionsType","filter","t","type","total","reduce","acc","currVal","amount","categories","chartRef","current","chartInstance","destroy","newChartInstance","Doughnut","data","chartData","forEach","category","find","c","filteredCategories","sc","labels","map","datasets","backgroundColor","color"],"sources":["/Users/Administrator/Desktop/STUDY/JavaScript/budget-tracker/src/useTransactions.js"],"sourcesContent":["import { useContext, useEffect, useRef } from \"react\";\nimport { ExpenseTrackerContext } from \"./context/context\";\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\nconst useTransactions = (title) => {\n    resetCategories();\n    const { transactions } = useContext(ExpenseTrackerContext);\n    const transactionsType = transactions.filter((t) => t.type === title);\n    const total = transactionsType.reduce((acc, currVal) => acc += currVal.amount, 0);\n    const categories = title === 'Income' ? incomeCategories : expenseCategories;\n\n    // Use useRef to keep track of the chart instance\n    const chartRef = useRef(null);\n\n    useEffect(() => {\n        // Check if there's an existing chart\n        if (chartRef.current && chartRef.current.chartInstance) {\n            // Destroy the existing chart\n            chartRef.current.chartInstance.destroy();\n        }\n\n        // Render the new chart\n        const newChartInstance = new Doughnut(chartRef.current, {\n            data: chartData,\n        });\n\n        // Update the chartRef with the new instance\n        chartRef.current = newChartInstance;\n\n        // Cleanup the chart on component unmount\n        return () => {\n            if (chartRef.current && chartRef.current.chartInstance) {\n                chartRef.current.chartInstance.destroy();\n            }\n        };\n    }, [title, transactions]);\n\n    transactionsType.forEach((t) => {\n        const category = categories.find((c) => c.type === t.category);\n\n        if (category) category.amount += t.amount;\n    });\n\n    const filteredCategories = categories.filter((sc) => sc.amount > 0);\n\n    const chartData = {\n        labels: filteredCategories.map((c) => c.type),\n        datasets: [{\n            data: filteredCategories.map((c) => c.amount),\n            backgroundColor: filteredCategories.map((c) => c.color),\n        }],\n    };\n\n    return { filteredCategories, total, chartData };\n};\n\nexport default useTransactions;\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACrD,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,wBAAwB;AAE7F,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/BH,eAAe,CAAC,CAAC;EACjB,MAAM;IAAEI;EAAa,CAAC,GAAGV,UAAU,CAACG,qBAAqB,CAAC;EAC1D,MAAMQ,gBAAgB,GAAGD,YAAY,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKN,KAAK,CAAC;EACrE,MAAMO,KAAK,GAAGJ,gBAAgB,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,IAAIC,OAAO,CAACC,MAAM,EAAE,CAAC,CAAC;EACjF,MAAMC,UAAU,GAAGZ,KAAK,KAAK,QAAQ,GAAGJ,gBAAgB,GAAGC,iBAAiB;;EAE5E;EACA,MAAMgB,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZ;IACA,IAAIoB,QAAQ,CAACC,OAAO,IAAID,QAAQ,CAACC,OAAO,CAACC,aAAa,EAAE;MACpD;MACAF,QAAQ,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,CAAC,CAAC;IAC5C;;IAEA;IACA,MAAMC,gBAAgB,GAAG,IAAIC,QAAQ,CAACL,QAAQ,CAACC,OAAO,EAAE;MACpDK,IAAI,EAAEC;IACV,CAAC,CAAC;;IAEF;IACAP,QAAQ,CAACC,OAAO,GAAGG,gBAAgB;;IAEnC;IACA,OAAO,MAAM;MACT,IAAIJ,QAAQ,CAACC,OAAO,IAAID,QAAQ,CAACC,OAAO,CAACC,aAAa,EAAE;QACpDF,QAAQ,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,CAAC,CAAC;MAC5C;IACJ,CAAC;EACL,CAAC,EAAE,CAAChB,KAAK,EAAEE,YAAY,CAAC,CAAC;EAEzBC,gBAAgB,CAACkB,OAAO,CAAEhB,CAAC,IAAK;IAC5B,MAAMiB,QAAQ,GAAGV,UAAU,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAClB,IAAI,KAAKD,CAAC,CAACiB,QAAQ,CAAC;IAE9D,IAAIA,QAAQ,EAAEA,QAAQ,CAACX,MAAM,IAAIN,CAAC,CAACM,MAAM;EAC7C,CAAC,CAAC;EAEF,MAAMc,kBAAkB,GAAGb,UAAU,CAACR,MAAM,CAAEsB,EAAE,IAAKA,EAAE,CAACf,MAAM,GAAG,CAAC,CAAC;EAEnE,MAAMS,SAAS,GAAG;IACdO,MAAM,EAAEF,kBAAkB,CAACG,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAAClB,IAAI,CAAC;IAC7CuB,QAAQ,EAAE,CAAC;MACPV,IAAI,EAAEM,kBAAkB,CAACG,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAACb,MAAM,CAAC;MAC7CmB,eAAe,EAAEL,kBAAkB,CAACG,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAACO,KAAK;IAC1D,CAAC;EACL,CAAC;EAED,OAAO;IAAEN,kBAAkB;IAAElB,KAAK;IAAEa;EAAU,CAAC;AACnD,CAAC;AAACnB,EAAA,CAlDIF,eAAe;AAoDrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}